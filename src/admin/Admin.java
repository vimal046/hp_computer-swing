package admin;

import JFrame.DashBoard;
import java.awt.Cursor;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import model.AdminModel;
import model.DataFetchModel;
import pojo.*;

/**
 *
 * @author VIMAL SUKU
 */
public class Admin extends javax.swing.JFrame {

    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        laptopDataFetch();
        desktopDataFetch();
        keyboardDataFetch();
        monitorDataFetch();
        printerDataFetch();
        mouseDataFetch();
    }

    public void laptopDataFetch() {
        List<LaptopPOJO> list = new DataFetchModel().laptopDataFetch();
        DefaultTableModel model = (DefaultTableModel) laptopTable.getModel();
        for (LaptopPOJO obj : list) {
            Object[] row = {obj.getLaptopId(), obj.getModelNo(), obj.getPrice()};
            model.addRow(row);
        }
    }

    public void desktopDataFetch() {
        List<DesktopPOJO> list = new DataFetchModel().desktopDataFetch();
        DefaultTableModel model = (DefaultTableModel) desktopTable.getModel();
        for (DesktopPOJO obj : list) {
            Object[] row = {obj.getDesktopId(), obj.getModelNo(), obj.getPrice()};
            model.addRow(row);
        }
    }

    public void keyboardDataFetch() {
        List<KeyboardPOJO> list = new DataFetchModel().keyboardDataFetch();
        DefaultTableModel model = (DefaultTableModel) keyboardTable.getModel();
        for (KeyboardPOJO obj : list) {
            Object[] row = {obj.getKeyboardId(), "Keyboard(" + obj.getConnectivity() + ")", obj.getPrice()};
            model.addRow(row);
        }
    }

    public void monitorDataFetch() {
        List<MonitorPOJO> list = new DataFetchModel().monitorDataFetch();
        DefaultTableModel model = (DefaultTableModel) monitorTable.getModel();
        for (MonitorPOJO obj : list) {
            Object[] row = {obj.getMonitorId(), obj.getModelNo(), obj.getPrice()};
            model.addRow(row);
        }
    }

    public void printerDataFetch() {
        List<PrinterPOJO> list = new DataFetchModel().printDataFetch();
        DefaultTableModel model = (DefaultTableModel) printerTable.getModel();
        for (PrinterPOJO obj : list) {
            Object[] row = {obj.getPrinterId(), obj.getModelNo(), obj.getPrice()};
            model.addRow(row);
        }
    }

    public void mouseDataFetch() {
        List<MousePOJO> list = new DataFetchModel().mouseDataFetch();
        DefaultTableModel model = (DefaultTableModel) mouseTable.getModel();
        for (MousePOJO obj : list) {
            Object[] row = {obj.getMouseId(), obj.getModelNo(), obj.getPrice()};
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toggle_buttonGroup = new javax.swing.ButtonGroup();
        product_buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        product_ToggleButton = new javax.swing.JToggleButton();
        customer_ToggleButton = new javax.swing.JToggleButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        laptopTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        desktopTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        printerTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        monitorTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        mouseTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        keyboardTable = new javax.swing.JTable();
        addNewButton = new javax.swing.JButton();
        update_Button = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        keyboardRadioBtn = new javax.swing.JRadioButton();
        lapRadioBtn = new javax.swing.JRadioButton();
        dekRadioBtn = new javax.swing.JRadioButton();
        printerRadioBtn = new javax.swing.JRadioButton();
        monitorRadioBtn = new javax.swing.JRadioButton();
        mouseRadioBtn = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        purchaseHistoryTable = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        customerDataTable = new javax.swing.JTable();

        toggle_buttonGroup.add(customer_ToggleButton);
        toggle_buttonGroup.add(product_ToggleButton);

        product_buttonGroup.add(keyboardRadioBtn);
        product_buttonGroup.add(mouseRadioBtn);
        product_buttonGroup.add(monitorRadioBtn);
        product_buttonGroup.add(printerRadioBtn);
        product_buttonGroup.add(dekRadioBtn);
        product_buttonGroup.add(lapRadioBtn);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(33, 53, 85));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(223, 245, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("HP Computers & Accessories");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, 440, 34));

        logout.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        logout.setForeground(new java.awt.Color(255, 32, 78));
        logout.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logout.setText("Logout");
        jPanel1.add(logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 10, 60, 30));
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dispose();
                new DashBoard().setVisible(true);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                setCursor(Cursor.getDefaultCursor());
            }
        });

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(223, 245, 255));
        jLabel3.setText("Welcome Admin");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 15, 179, 34));

        product_ToggleButton.setText("Product Page");
        product_ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_ToggleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(product_ToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 70, -1, -1));

        customer_ToggleButton.setText("Customer Page");
        customer_ToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customer_ToggleButtonActionPerformed(evt);
            }
        });
        jPanel1.add(customer_ToggleButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 70, 120, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1250, 100));

        jPanel8.setBackground(new java.awt.Color(79, 112, 156));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        laptopTable.setBackground(new java.awt.Color(152, 171, 238));
        laptopTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        laptopTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        laptopTable.setAlignmentX(2.0F);
        laptopTable.setAlignmentY(2.0F);
        laptopTable.setEditingRow(1);
        laptopTable.setGridColor(new java.awt.Color(152, 171, 238));
        laptopTable.setRowHeight(30);
        laptopTable.setRowMargin(2);
        laptopTable.setSelectionForeground(new java.awt.Color(152, 171, 238));
        laptopTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(laptopTable);
        if (laptopTable.getColumnModel().getColumnCount() > 0) {
            laptopTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jPanel8.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 250, 330));

        desktopTable.setBackground(new java.awt.Color(152, 171, 238));
        desktopTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        desktopTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Id", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        desktopTable.setGridColor(new java.awt.Color(152, 171, 238));
        desktopTable.setRowHeight(30);
        jScrollPane2.setViewportView(desktopTable);
        if (desktopTable.getColumnModel().getColumnCount() > 0) {
            desktopTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jPanel8.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 160, 260, 330));

        printerTable.setBackground(new java.awt.Color(152, 171, 238));
        printerTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        printerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        printerTable.setGridColor(new java.awt.Color(152, 171, 238));
        printerTable.setRowHeight(30);
        jScrollPane3.setViewportView(printerTable);
        if (printerTable.getColumnModel().getColumnCount() > 0) {
            printerTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        jPanel8.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 160, 260, 330));

        monitorTable.setBackground(new java.awt.Color(152, 171, 238));
        monitorTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        monitorTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        monitorTable.setGridColor(new java.awt.Color(152, 171, 238));
        monitorTable.setRowHeight(30);
        jScrollPane4.setViewportView(monitorTable);
        if (monitorTable.getColumnModel().getColumnCount() > 0) {
            monitorTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, 260, 340));

        mouseTable.setBackground(new java.awt.Color(152, 171, 238));
        mouseTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        mouseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mouseTable.setGridColor(new java.awt.Color(152, 171, 238));
        mouseTable.setRowHeight(30);
        jScrollPane5.setViewportView(mouseTable);
        if (mouseTable.getColumnModel().getColumnCount() > 0) {
            mouseTable.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jPanel8.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 580, 260, 340));

        keyboardTable.setBackground(new java.awt.Color(152, 171, 238));
        keyboardTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        keyboardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Model No.", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        keyboardTable.setGridColor(new java.awt.Color(152, 171, 238));
        keyboardTable.setRowHeight(30);
        jScrollPane6.setViewportView(keyboardTable);
        if (keyboardTable.getColumnModel().getColumnCount() > 0) {
            keyboardTable.getColumnModel().getColumn(1).setPreferredWidth(150);
        }

        jPanel8.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 580, 260, 340));

        addNewButton.setBackground(new java.awt.Color(13, 146, 118));
        addNewButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addNewButton.setForeground(new java.awt.Color(0, 0, 0));
        addNewButton.setText("Add New Product");
        addNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewButtonActionPerformed(evt);
            }
        });
        jPanel8.add(addNewButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 560, 160, 40));

        update_Button.setBackground(new java.awt.Color(252, 220, 42));
        update_Button.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        update_Button.setForeground(new java.awt.Color(0, 0, 0));
        update_Button.setText("Update Price");
        update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_ButtonActionPerformed(evt);
            }
        });
        jPanel8.add(update_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 410, 160, 40));

        removeButton.setBackground(new java.awt.Color(255, 0, 77));
        removeButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        removeButton.setForeground(new java.awt.Color(0, 0, 0));
        removeButton.setText("Remove Product");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        jPanel8.add(removeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 480, 160, 40));

        keyboardRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        keyboardRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        keyboardRadioBtn.setText("Keyboard");
        jPanel8.add(keyboardRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 530, -1, -1));

        lapRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        lapRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        lapRadioBtn.setText("Laptops");
        jPanel8.add(lapRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        dekRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        dekRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        dekRadioBtn.setText("Desktop");
        jPanel8.add(dekRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 120, -1, -1));

        printerRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        printerRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        printerRadioBtn.setText("Printer");
        jPanel8.add(printerRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 120, -1, -1));

        monitorRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        monitorRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        monitorRadioBtn.setText("Monitors");
        jPanel8.add(monitorRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 530, -1, -1));

        mouseRadioBtn.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        mouseRadioBtn.setForeground(new java.awt.Color(0, 0, 0));
        mouseRadioBtn.setText("Mouse");
        jPanel8.add(mouseRadioBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 530, -1, -1));

        jTabbedPane1.addTab("tab1", jPanel8);

        jPanel2.setBackground(new java.awt.Color(79, 112, 156));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        purchaseHistoryTable.setBackground(new java.awt.Color(152, 171, 238));
        purchaseHistoryTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        purchaseHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        purchaseHistoryTable.setRowHeight(30);
        jScrollPane7.setViewportView(purchaseHistoryTable);
        if (purchaseHistoryTable.getColumnModel().getColumnCount() > 0) {
            purchaseHistoryTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        }

        jPanel2.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 220, 300, 620));

        customerDataTable.setBackground(new java.awt.Color(152, 171, 238));
        customerDataTable.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        customerDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Name", "Mobile", "Bill Amount", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        customerDataTable.setAlignmentX(1.0F);
        customerDataTable.setAlignmentY(1.0F);
        customerDataTable.setRowHeight(30);
        customerDataTable.setRowMargin(1);
        customerDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerDataTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(customerDataTable);
        if (customerDataTable.getColumnModel().getColumnCount() > 0) {
            customerDataTable.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        jPanel2.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 590, 620));

        jTabbedPane1.addTab("tab2", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -35, 1250, 990));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void product_ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_ToggleButtonActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_product_ToggleButtonActionPerformed

    private void customer_ToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customer_ToggleButtonActionPerformed
        jTabbedPane1.setSelectedIndex(1);
        List<AdminPOJO> list=new AdminModel().customerDataFetch();
        DefaultTableModel model = (DefaultTableModel) customerDataTable.getModel();
        for (AdminPOJO obj : list) {
            Object[] row = {obj.getCustomerId(),obj.getName(),obj.getMbile(),obj.getBillAmount(),obj.getDate()};
            model.addRow(row);
        }
    }//GEN-LAST:event_customer_ToggleButtonActionPerformed

    private void update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_ButtonActionPerformed
        String tableName = "";
        DefaultTableModel model = null;
        JTable selectedTable = null;

        if (!lapRadioBtn.isSelected() && !dekRadioBtn.isSelected() && !printerRadioBtn.isSelected()
                && !monitorRadioBtn.isSelected() && !mouseRadioBtn.isSelected() && !keyboardRadioBtn.isSelected()) {

            JOptionPane.showMessageDialog(this, "Please choose a table.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            if (lapRadioBtn.isSelected()) {
                tableName = "Laptop";
                model = (DefaultTableModel) laptopTable.getModel();
                selectedTable = laptopTable;
            } else if (dekRadioBtn.isSelected()) {
                tableName = "Desktop";
                model = (DefaultTableModel) desktopTable.getModel();
                selectedTable = desktopTable;
            } else if (printerRadioBtn.isSelected()) {
                tableName = "Printer";
                model = (DefaultTableModel) printerTable.getModel();
                selectedTable = printerTable;
            } else if (monitorRadioBtn.isSelected()) {
                tableName = "Monitor";
                model = (DefaultTableModel) monitorTable.getModel();
                selectedTable = monitorTable;
            } else if (mouseRadioBtn.isSelected()) {
                tableName = "Mouse";
                model = (DefaultTableModel) mouseTable.getModel();
                selectedTable = mouseTable;
            } else if (keyboardRadioBtn.isSelected()) {
                tableName = "Keyboard";
                model = (DefaultTableModel) keyboardTable.getModel();
                selectedTable = keyboardTable;
            }
        }

        int selectedRow = selectedTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select the row you want to update.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int newPrice = Integer.parseInt(model.getValueAt(selectedRow, selectedTable.getSelectedColumn()).toString());
            int productID = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());

            new AdminModel().updatePrice(tableName, productID, newPrice);
            if (lapRadioBtn.isSelected()) {
                ((DefaultTableModel) laptopTable.getModel()).fireTableDataChanged();
            } else if (dekRadioBtn.isSelected()) {
                ((DefaultTableModel) desktopTable.getModel()).fireTableDataChanged();
            } else if (printerRadioBtn.isSelected()) {
                ((DefaultTableModel) printerTable.getModel()).fireTableDataChanged();
            } else if (monitorRadioBtn.isSelected()) {
                ((DefaultTableModel) monitorTable.getModel()).fireTableDataChanged();
            } else if (mouseRadioBtn.isSelected()) {
                ((DefaultTableModel) mouseTable.getModel()).fireTableDataChanged();
            } else if (keyboardRadioBtn.isSelected()) {
                ((DefaultTableModel) keyboardTable.getModel()).fireTableDataChanged();
            }

        }

    }//GEN-LAST:event_update_ButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        String tableName = "";
        DefaultTableModel model = null;
        JTable selectedTable = null;

        if (!lapRadioBtn.isSelected() && !dekRadioBtn.isSelected() && !printerRadioBtn.isSelected()
                && !monitorRadioBtn.isSelected() && !mouseRadioBtn.isSelected() && !keyboardRadioBtn.isSelected()) {

            JOptionPane.showMessageDialog(this, "Please choose a table.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            if (lapRadioBtn.isSelected()) {
                tableName = "Laptop";
                model = (DefaultTableModel) laptopTable.getModel();
                selectedTable = laptopTable;
            } else if (dekRadioBtn.isSelected()) {
                tableName = "Desktop";
                model = (DefaultTableModel) desktopTable.getModel();
                selectedTable = desktopTable;
            } else if (printerRadioBtn.isSelected()) {
                tableName = "Printer";
                model = (DefaultTableModel) printerTable.getModel();
                selectedTable = printerTable;
            } else if (monitorRadioBtn.isSelected()) {
                tableName = "Monitor";
                model = (DefaultTableModel) monitorTable.getModel();
                selectedTable = monitorTable;
            } else if (mouseRadioBtn.isSelected()) {
                tableName = "Mouse";
                model = (DefaultTableModel) mouseTable.getModel();
                selectedTable = mouseTable;
            } else if (keyboardRadioBtn.isSelected()) {
                tableName = "Keyboard";
                model = (DefaultTableModel) keyboardTable.getModel();
                selectedTable = keyboardTable;
            }
        }

        int selectedRow = selectedTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select the row you want to update.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int productID = Integer.parseInt(model.getValueAt(selectedRow, 0).toString());

            new AdminModel().deleteRow(tableName, productID);
            
            model.removeRow(selectedRow);

        }

    }//GEN-LAST:event_removeButtonActionPerformed

    private void customerDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerDataTableMouseClicked
      
        if(evt.getClickCount()==2){
            JTable table =(JTable) evt.getSource();
            int row=table.getSelectedRow();
            int customerID=Integer.parseInt(table.getValueAt(row, 0).toString());
           List<AdminPOJO> list=new AdminModel().purchaseHistory(customerID);
           
           DefaultTableModel model = (DefaultTableModel) purchaseHistoryTable.getModel();
           model.setRowCount(0); 
        for (AdminPOJO obj : list) {
            Object[] row1 = {obj.getProductName(),obj.getPrice()};
            model.addRow(row1);
        }
        }
    }//GEN-LAST:event_customerDataTableMouseClicked

    private void addNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewButtonActionPerformed
        new AddNew().setVisible(true);
    }//GEN-LAST:event_addNewButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Admin().setVisible(true);
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewButton;
    private javax.swing.JTable customerDataTable;
    private javax.swing.JToggleButton customer_ToggleButton;
    private javax.swing.JRadioButton dekRadioBtn;
    private javax.swing.JTable desktopTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton keyboardRadioBtn;
    private javax.swing.JTable keyboardTable;
    private javax.swing.JRadioButton lapRadioBtn;
    private javax.swing.JTable laptopTable;
    private javax.swing.JLabel logout;
    private javax.swing.JRadioButton monitorRadioBtn;
    private javax.swing.JTable monitorTable;
    private javax.swing.JRadioButton mouseRadioBtn;
    private javax.swing.JTable mouseTable;
    private javax.swing.JRadioButton printerRadioBtn;
    private javax.swing.JTable printerTable;
    private javax.swing.JToggleButton product_ToggleButton;
    private javax.swing.ButtonGroup product_buttonGroup;
    private javax.swing.JTable purchaseHistoryTable;
    private javax.swing.JButton removeButton;
    private javax.swing.ButtonGroup toggle_buttonGroup;
    private javax.swing.JButton update_Button;
    // End of variables declaration//GEN-END:variables
}
